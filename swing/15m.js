async function fetchCountPositiveNegative(symbol) {
  const now = new Date();
  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 2, 0, 0); // 02:00 (heure locale)
  const startTime = today.getTime();
  const endTime = now.getTime();

  // Calcule combien de bougies de 15 minutes sont nécessaires
  const diffMinutes = Math.floor((endTime - startTime) / (1000 * 60));
  const limit = Math.floor(diffMinutes / 15);

  if (limit <= 0) return;

  try {
    const response = await fetch(
      `https://api.binance.com/api/v3/klines?symbol=${symbol}USDT&interval=15m&startTime=${startTime}&limit=${limit}`
    );
    const data = await response.json();

    let countPositive = 0;
    let countNegative = 0;

    for (let i = 0; i < data.length; i++) {
      const open = parseFloat(data[i][1]);
      const close = parseFloat(data[i][4]);
      if (close > open) countPositive++;
      else if (close < open) countNegative++;
    }

    const result = countPositive - countNegative;
    const row = document.getElementById(symbol);
    const resultCell = row.insertCell(-1); // Ajoute à la fin
    resultCell.textContent = `Pos-Neg: ${result}`;
    resultCell.style.fontWeight = "bold";
    resultCell.style.color = result > 0 ? "green" : result < 0 ? "red" : "gray";

    const summary = document.getElementById("cryptoNames");
    summary.innerHTML += `<p>${symbol}: Pos=${countPositive}, Neg=${countNegative}, Diff=${result}</p>`;
  } catch (err) {
    console.error(`Erreur lors de la récupération des données pour ${symbol}:`, err);
  }
}

fetchCountPositiveNegative("1INCH");
fetchCountPositiveNegative("AAVE");
fetchCountPositiveNegative("ACE");
fetchCountPositiveNegative("ACH");
fetchCountPositiveNegative("ACX");
fetchCountPositiveNegative("ACT");
fetchCountPositiveNegative("ADA");
fetchCountPositiveNegative("AEVO");
fetchCountPositiveNegative("AGIX");
fetchCountPositiveNegative("AGLD");
fetchCountPositiveNegative("AI");
fetchCountPositiveNegative("AI16Z");
fetchCountPositiveNegative("AIXBT");
fetchCountPositiveNegative("AERGO");
fetchCountPositiveNegative("ALCHE");
fetchCountPositiveNegative("ALGO");
fetchCountPositiveNegative("ALICE");
fetchCountPositiveNegative("ALPACA");
fetchCountPositiveNegative("ALPHA");
fetchCountPositiveNegative("ALT");
fetchCountPositiveNegative("AMB");
fetchCountPositiveNegative("ANKR");
fetchCountPositiveNegative("APE");
fetchCountPositiveNegative("API3");
fetchCountPositiveNegative("APT");
fetchCountPositiveNegative("AR");
fetchCountPositiveNegative("ARB");
fetchCountPositiveNegative("ARK");
fetchCountPositiveNegative("ARKM");
fetchCountPositiveNegative("ARPA");
fetchCountPositiveNegative("ANIME");
fetchCountPositiveNegative("ASTR");
fetchCountPositiveNegative("ATA");
fetchCountPositiveNegative("ATOM");
fetchCountPositiveNegative("AUCTION");
fetchCountPositiveNegative("AVAAI");
fetchCountPositiveNegative("AVA");
fetchCountPositiveNegative("AVAX");
fetchCountPositiveNegative("AXL");
fetchCountPositiveNegative("AXS");
fetchCountPositiveNegative("B3");
fetchCountPositiveNegative("BADGER");
fetchCountPositiveNegative("BAL");
fetchCountPositiveNegative("BAN");
fetchCountPositiveNegative("BANANA");
fetchCountPositiveNegative("BANANAS31");
fetchCountPositiveNegative("BAND");
fetchCountPositiveNegative("BAT");
fetchCountPositiveNegative("BAKE");
fetchCountPositiveNegative("BB");
fetchCountPositiveNegative("BCH");
fetchCountPositiveNegative("BEAMX");
fetchCountPositiveNegative("BEL");
fetchCountPositiveNegative("BERA");
fetchCountPositiveNegative("BICO");
fetchCountPositiveNegative("BID");
fetchCountPositiveNegative("BIGTIME");
fetchCountPositiveNegative("BIO");
fetchCountPositiveNegative("BMT");
fetchCountPositiveNegative("BNB");
fetchCountPositiveNegative("BNT");
fetchCountPositiveNegative("BNX");
fetchCountPositiveNegative("BOME");
fetchCountPositiveNegative("BOND");
fetchCountPositiveNegative("BONK");
fetchCountPositiveNegative("BR");
fetchCountPositiveNegative("BRETT");
fetchCountPositiveNegative("BROCCOLI714");
fetchCountPositiveNegative("BROCCOLIF3B");
fetchCountPositiveNegative("BSV");
fetchCountPositiveNegative("BSW");
fetchCountPositiveNegative("BTC");
fetchCountPositiveNegative("BTCDOM");
fetchCountPositiveNegative("BABY");
fetchCountPositiveNegative("BABYDOGE");
fetchCountPositiveNegative("BLUR");
fetchCountPositiveNegative("BLZ");
fetchCountPositiveNegative("CAKE");
fetchCountPositiveNegative("CAT");
fetchCountPositiveNegative("CATI");
fetchCountPositiveNegative("C98");
fetchCountPositiveNegative("CELO");
fetchCountPositiveNegative("CELR");
fetchCountPositiveNegative("CETUS");
fetchCountPositiveNegative("CFX");
fetchCountPositiveNegative("CGPT");
fetchCountPositiveNegative("CHESS");
fetchCountPositiveNegative("CHILLGUY");
fetchCountPositiveNegative("CHR");
fetchCountPositiveNegative("CHZ");
fetchCountPositiveNegative("CKB");
fetchCountPositiveNegative("COMBO");
fetchCountPositiveNegative("COMP");
fetchCountPositiveNegative("COOKIE");
fetchCountPositiveNegative("COS");
fetchCountPositiveNegative("COTI");
fetchCountPositiveNegative("COW");
fetchCountPositiveNegative("CRV");
fetchCountPositiveNegative("CTK");
fetchCountPositiveNegative("CTSI");
fetchCountPositiveNegative("CVX");
fetchCountPositiveNegative("CVC");
fetchCountPositiveNegative("CYBER");
fetchCountPositiveNegative("D");
fetchCountPositiveNegative("DAR");
fetchCountPositiveNegative("DASH");
fetchCountPositiveNegative("DEGEN");
fetchCountPositiveNegative("DEGO");
fetchCountPositiveNegative("DENT");
fetchCountPositiveNegative("DEXE");
fetchCountPositiveNegative("DF");
fetchCountPositiveNegative("DGB");
fetchCountPositiveNegative("DIA");
fetchCountPositiveNegative("DODOX");
fetchCountPositiveNegative("DOGE");
fetchCountPositiveNegative("DOGS");
fetchCountPositiveNegative("DOT");
fetchCountPositiveNegative("DUSK");
fetchCountPositiveNegative("DYDX");
fetchCountPositiveNegative("DYM");
fetchCountPositiveNegative("EDU");
fetchCountPositiveNegative("EGLD");
fetchCountPositiveNegative("EIGEN");
fetchCountPositiveNegative("EOS");
fetchCountPositiveNegative("ENA");
fetchCountPositiveNegative("ENJ");
fetchCountPositiveNegative("ENS");
fetchCountPositiveNegative("EPIC");
fetchCountPositiveNegative("ETC");
fetchCountPositiveNegative("ETH");
fetchCountPositiveNegative("ETHFI");
fetchCountPositiveNegative("ETHW");
fetchCountPositiveNegative("FARTCOIN");
fetchCountPositiveNegative("FET");
fetchCountPositiveNegative("FIDA");
fetchCountPositiveNegative("FIL");
fetchCountPositiveNegative("FIO");
fetchCountPositiveNegative("FLM");
fetchCountPositiveNegative("FLOKI");
fetchCountPositiveNegative("FLOW");
fetchCountPositiveNegative("FLUX");
fetchCountPositiveNegative("FORM");
fetchCountPositiveNegative("FORTH");
fetchCountPositiveNegative("FRONT");
fetchCountPositiveNegative("FTM");
fetchCountPositiveNegative("FTT");
fetchCountPositiveNegative("FUN");
fetchCountPositiveNegative("FXS");
fetchCountPositiveNegative("G");
fetchCountPositiveNegative("GALA");
fetchCountPositiveNegative("GAS");
fetchCountPositiveNegative("GHST");
fetchCountPositiveNegative("GLM");
fetchCountPositiveNegative("GLMR");
fetchCountPositiveNegative("GMT");
fetchCountPositiveNegative("GMX");
fetchCountPositiveNegative("GOAT");
fetchCountPositiveNegative("GPS");
fetchCountPositiveNegative("GRASS");
fetchCountPositiveNegative("GRT");
fetchCountPositiveNegative("GRIFFAIN");
fetchCountPositiveNegative("GTC");
fetchCountPositiveNegative("GUN");
fetchCountPositiveNegative("GUNTHY");
fetchCountPositiveNegative("HBAR");
fetchCountPositiveNegative("HFT");
fetchCountPositiveNegative("HIFI");
fetchCountPositiveNegative("HIGH");
fetchCountPositiveNegative("HIPPO");
fetchCountPositiveNegative("HIVE");
fetchCountPositiveNegative("HMSTR");
fetchCountPositiveNegative("HOT");
fetchCountPositiveNegative("HOOK");
fetchCountPositiveNegative("ICX");
fetchCountPositiveNegative("ID");
fetchCountPositiveNegative("IDEX");
fetchCountPositiveNegative("ILV");
fetchCountPositiveNegative("IMX");
fetchCountPositiveNegative("INJ");
fetchCountPositiveNegative("IOST");
fetchCountPositiveNegative("IOTA");
fetchCountPositiveNegative("IOTX");
fetchCountPositiveNegative("IO");
fetchCountPositiveNegative("IP");
fetchCountPositiveNegative("JASMY");
fetchCountPositiveNegative("JELLYJELLY");
fetchCountPositiveNegative("JOE");
fetchCountPositiveNegative("JTO");
fetchCountPositiveNegative("JUP");
fetchCountPositiveNegative("KAIA");
fetchCountPositiveNegative("KAITO");
fetchCountPositiveNegative("KAS");
fetchCountPositiveNegative("KAVA");
fetchCountPositiveNegative("KDA");
fetchCountPositiveNegative("KEY");
fetchCountPositiveNegative("KMNO");
fetchCountPositiveNegative("KLAY");
fetchCountPositiveNegative("KNC");
fetchCountPositiveNegative("KOMA");
fetchCountPositiveNegative("KSM");
fetchCountPositiveNegative("LDO");
fetchCountPositiveNegative("LEVER");
fetchCountPositiveNegative("LINA");
fetchCountPositiveNegative("LINK");
fetchCountPositiveNegative("LISTA");
fetchCountPositiveNegative("LIT");
fetchCountPositiveNegative("LOKA");
fetchCountPositiveNegative("LOOM");
fetchCountPositiveNegative("LPT");
fetchCountPositiveNegative("LQTY");
fetchCountPositiveNegative("LRC");
fetchCountPositiveNegative("LSK");
fetchCountPositiveNegative("LTC");
fetchCountPositiveNegative("LUNA2");
fetchCountPositiveNegative("LUNC");
fetchCountPositiveNegative("LAYER");
fetchCountPositiveNegative("LUMIA");
fetchCountPositiveNegative("MAGIC");
fetchCountPositiveNegative("MANA");
fetchCountPositiveNegative("MANTA");
fetchCountPositiveNegative("MASK");
fetchCountPositiveNegative("MAV");
fetchCountPositiveNegative("MAVIA");
fetchCountPositiveNegative("MBOX");
fetchCountPositiveNegative("MDT");
fetchCountPositiveNegative("ME");
fetchCountPositiveNegative("MELANIA");
fetchCountPositiveNegative("MEME");
fetchCountPositiveNegative("METIS");
fetchCountPositiveNegative("MINA");
fetchCountPositiveNegative("MEW");
fetchCountPositiveNegative("MKR");
fetchCountPositiveNegative("MLN");
fetchCountPositiveNegative("MOCA");
fetchCountPositiveNegative("MOG");
fetchCountPositiveNegative("MOODENG");
fetchCountPositiveNegative("MORPHO");
fetchCountPositiveNegative("MOVR");
fetchCountPositiveNegative("MOVE");
fetchCountPositiveNegative("MTL");
fetchCountPositiveNegative("MUBARAK");
fetchCountPositiveNegative("MYRO");
fetchCountPositiveNegative("NEAR");
fetchCountPositiveNegative("NEO");
fetchCountPositiveNegative("NEIRO");
fetchCountPositiveNegative("NEIROETH");
fetchCountPositiveNegative("NFP");
fetchCountPositiveNegative("NIL");
fetchCountPositiveNegative("NKN");
fetchCountPositiveNegative("NMR");
fetchCountPositiveNegative("NOT");
fetchCountPositiveNegative("NTRN");
fetchCountPositiveNegative("NULS");
fetchCountPositiveNegative("OCEAN");
fetchCountPositiveNegative("OGN");
fetchCountPositiveNegative("OM");
fetchCountPositiveNegative("OMG");
fetchCountPositiveNegative("OMNI");
fetchCountPositiveNegative("ONDO");
fetchCountPositiveNegative("ONE");
fetchCountPositiveNegative("ONG");
fetchCountPositiveNegative("ONT");
fetchCountPositiveNegative("OP");
fetchCountPositiveNegative("OXT");
fetchCountPositiveNegative("ORDI");
fetchCountPositiveNegative("ORBS");
fetchCountPositiveNegative("ORCA");
fetchCountPositiveNegative("PARTI");
fetchCountPositiveNegative("PAXG");
fetchCountPositiveNegative("PEOPLE");
fetchCountPositiveNegative("PENDLE");
fetchCountPositiveNegative("PENGU");
fetchCountPositiveNegative("PEPE");
fetchCountPositiveNegative("PERP");
fetchCountPositiveNegative("PHA");
fetchCountPositiveNegative("PHB");
fetchCountPositiveNegative("PIPPIN");
fetchCountPositiveNegative("PIXEL");
fetchCountPositiveNegative("PLUME");
fetchCountPositiveNegative("PNUT");
fetchCountPositiveNegative("POL");
fetchCountPositiveNegative("POLYX");
fetchCountPositiveNegative("PONKE");
fetchCountPositiveNegative("POPCAT");
fetchCountPositiveNegative("PORTAL");
fetchCountPositiveNegative("POWR");
fetchCountPositiveNegative("PROM");
fetchCountPositiveNegative("PYTH");
fetchCountPositiveNegative("QNT");
fetchCountPositiveNegative("QTUM");
fetchCountPositiveNegative("QUICK");
fetchCountPositiveNegative("RAD");
fetchCountPositiveNegative("RARE");
fetchCountPositiveNegative("RAY");
fetchCountPositiveNegative("RAYSOL");
fetchCountPositiveNegative("RATS");
fetchCountPositiveNegative("RDNT");
fetchCountPositiveNegative("REEF");
fetchCountPositiveNegative("REI");
fetchCountPositiveNegative("REN");
fetchCountPositiveNegative("RENDER");
fetchCountPositiveNegative("REZ");
fetchCountPositiveNegative("RIF");
fetchCountPositiveNegative("RLC");
fetchCountPositiveNegative("RNDR");
fetchCountPositiveNegative("RONIN");
fetchCountPositiveNegative("ROSE");
fetchCountPositiveNegative("RPL");
fetchCountPositiveNegative("RSR");
fetchCountPositiveNegative("RUNE");
fetchCountPositiveNegative("RVN");
fetchCountPositiveNegative("S");
fetchCountPositiveNegative("SAFE");
fetchCountPositiveNegative("SAGA");
fetchCountPositiveNegative("SAND");
fetchCountPositiveNegative("SANTOS");
fetchCountPositiveNegative("SAT");
fetchCountPositiveNegative("SATS");
fetchCountPositiveNegative("SC");
fetchCountPositiveNegative("SCR");
fetchCountPositiveNegative("SCRT");
fetchCountPositiveNegative("SEI");
fetchCountPositiveNegative("SFP");
fetchCountPositiveNegative("SHIB");
fetchCountPositiveNegative("SHELL");
fetchCountPositiveNegative("SIREN");
fetchCountPositiveNegative("SKL");
fetchCountPositiveNegative("SLP");
fetchCountPositiveNegative("SLERF");
fetchCountPositiveNegative("SNT");
fetchCountPositiveNegative("SNX");
fetchCountPositiveNegative("SOL");
fetchCountPositiveNegative("SOLV");
fetchCountPositiveNegative("SONIC");
fetchCountPositiveNegative("SPELL");
fetchCountPositiveNegative("SPX");
fetchCountPositiveNegative("SRM");
fetchCountPositiveNegative("SSV");
fetchCountPositiveNegative("STEEM");
fetchCountPositiveNegative("STMX");
fetchCountPositiveNegative("STORJ");
fetchCountPositiveNegative("STPT");
fetchCountPositiveNegative("STRAX");
fetchCountPositiveNegative("STRK");
fetchCountPositiveNegative("STG");
fetchCountPositiveNegative("STX");
fetchCountPositiveNegative("SUN");
fetchCountPositiveNegative("SUI");
fetchCountPositiveNegative("SUPER");
fetchCountPositiveNegative("SUSHI");
fetchCountPositiveNegative("SXP");
fetchCountPositiveNegative("SYN");
fetchCountPositiveNegative("SYS");
fetchCountPositiveNegative("T");
fetchCountPositiveNegative("TAO");
fetchCountPositiveNegative("THETA");
fetchCountPositiveNegative("THE");
fetchCountPositiveNegative("TIA");
fetchCountPositiveNegative("TLM");
fetchCountPositiveNegative("TNSR");
fetchCountPositiveNegative("TON");
fetchCountPositiveNegative("TOKEN");
fetchCountPositiveNegative("TRB");
fetchCountPositiveNegative("TRU");
fetchCountPositiveNegative("TRUMP");
fetchCountPositiveNegative("TRX");
fetchCountPositiveNegative("TST");
fetchCountPositiveNegative("TURBO");
fetchCountPositiveNegative("TUT");
fetchCountPositiveNegative("TWT");
fetchCountPositiveNegative("UMA");
fetchCountPositiveNegative("UNFI");
fetchCountPositiveNegative("UNI");
fetchCountPositiveNegative("USUAL");
fetchCountPositiveNegative("USTC");
fetchCountPositiveNegative("VANRY");
fetchCountPositiveNegative("VANA");
fetchCountPositiveNegative("VET");
fetchCountPositiveNegative("VELODROME");
fetchCountPositiveNegative("VIC");
fetchCountPositiveNegative("VINE");
fetchCountPositiveNegative("VIRTUAL");
fetchCountPositiveNegative("VOXEL");
fetchCountPositiveNegative("VTHO");
fetchCountPositiveNegative("VVV");
fetchCountPositiveNegative("W");
fetchCountPositiveNegative("WAL");
fetchCountPositiveNegative("WAVES");
fetchCountPositiveNegative("WAXP");
fetchCountPositiveNegative("WHY");
fetchCountPositiveNegative("WIF");
fetchCountPositiveNegative("WLD");
fetchCountPositiveNegative("WOO");
fetchCountPositiveNegative("X");
fetchCountPositiveNegative("XAI");
fetchCountPositiveNegative("XEC");
fetchCountPositiveNegative("XEM");
fetchCountPositiveNegative("XLM");
fetchCountPositiveNegative("XRP");
fetchCountPositiveNegative("XTZ");
fetchCountPositiveNegative("XVG");
fetchCountPositiveNegative("XVS");
fetchCountPositiveNegative("YFI");
fetchCountPositiveNegative("YGG");
fetchCountPositiveNegative("ZEC");
fetchCountPositiveNegative("ZEN");
fetchCountPositiveNegative("ZEREBRO");
fetchCountPositiveNegative("ZETA");
fetchCountPositiveNegative("ZIL");
fetchCountPositiveNegative("ZK");
fetchCountPositiveNegative("ZRO");
fetchCountPositiveNegative("ZRX");


function mettreAJourHeure() {
  var elementHeure = document.getElementById("heure");
  var maintenant = new Date();

  // Créer une copie de l'heure actuelle
  var heureActuelle = new Date(maintenant);

  // Ajouter 3 heures et 20 minutes à l'heure actuelle
  maintenant.setHours(maintenant.getHours() + 3);
  maintenant.setMinutes(maintenant.getMinutes() + 20);

  var heuresMaintenant = maintenant.getHours();
  var minutesMaintenant = maintenant.getMinutes();
  var secondesMaintenant = maintenant.getSeconds();

  var heuresActuelle = heureActuelle.getHours();
  var minutesActuelle = heureActuelle.getMinutes();
  var secondesActuelle = heureActuelle.getSeconds();

  // Ajouter un zéro devant les chiffres < 10
  heuresMaintenant =
    heuresMaintenant < 10 ? "0" + heuresMaintenant : heuresMaintenant;
  minutesMaintenant =
    minutesMaintenant < 10 ? "0" + minutesMaintenant : minutesMaintenant;
  secondesMaintenant =
    secondesMaintenant < 10 ? "0" + secondesMaintenant : secondesMaintenant;

  heuresActuelle = heuresActuelle < 10 ? "0" + heuresActuelle : heuresActuelle;
  minutesActuelle =
    minutesActuelle < 10 ? "0" + minutesActuelle : minutesActuelle;
  secondesActuelle =
    secondesActuelle < 10 ? "0" + secondesActuelle : secondesActuelle;

  // Mettre à jour le contenu de l'élément avec les deux heures
  elementHeure.innerHTML =
    heuresActuelle + ":" + minutesActuelle + ":" + secondesActuelle;
}

// Appeler la fonction pour mettre à jour l'heure
mettreAJourHeure();
